# Product Requirements Document: Supabase Integration for AI Cooking & Fitness Assistant

## 1. Overview

### Purpose
Add persistent data storage to the AI Cooking & Fitness Assistant to enable users to save their chat conversations, build a personal recipe collection, track workouts, monitor calorie intake, and access their health/nutrition data across sessions and devices.

### Problem Statement
Currently, all chat conversations are ephemeral (lost on page refresh). Users cannot:
- Access previous cooking and fitness conversations
- Save recipes and workout plans they discover through AI interactions
- Build a personal cookbook and workout library over time
- Track their calorie consumption and fitness progress
- Resume conversations where they left off
- Access their data from different devices
- Monitor their health and fitness goals over time

### Success Metrics
- Users can save and retrieve chat history (cooking and fitness)
- Users can bookmark and organize recipes and workouts
- Users can track daily calorie intake and expenditure
- Users can monitor fitness progress over time
- 100% data persistence across browser sessions
- Zero performance degradation in chat streaming
- Secure user authentication and data isolation

## 2. Target Users

### Primary Personas (Examples)
1. **Home Cook Sarah** - Wants to save favorite recipes and cooking tips from AI conversations
2. **Meal Planner Mike** - Needs to organize recipes by meal type and track what works for his family
3. **Learning Chef Lisa** - Wants to revisit previous cooking questions and see her progress over time
4. **Fitness Enthusiast Tom** - Wants to track workouts, monitor calorie intake, and achieve fitness goals
5. **Health-Conscious Emma** - Needs to balance nutrition with fitness, track macros, and plan healthy meals
6. **Weight Loss Journey Jack** - Wants to count calories, save healthy recipes, and track progress toward weight loss goals

### User Needs
- Simple authentication (email/password)
- Automatic conversation saving (no manual "save" step)
- Quick access to saved recipes and workouts
- Search through past conversations (cooking and fitness)
- Organize recipes and workouts into collections
- Input available ingredients to get recipe suggestions
- Upload photos of receipts or ingredients for automatic ingredient extraction
- Log daily meals and track calorie intake
- Save and track workout routines
- Monitor fitness progress and health metrics
- Get AI-powered workout recommendations
- Calculate and track macros (protein, carbs, fats)
- Set and track fitness/nutrition goals

## 3. Scope

### In Scope (Phase 1)

**Cooking Features:**
- User authentication (email/password signup/login)
- Automatic chat history persistence
- Save recipes from AI responses
- Basic recipe collection management
- User profile and settings (including dietary restrictions/allergies)
- Conversation history browser
- Recipe search and filtering
- Ingredient input system (text-based)
- Image upload for receipts and ingredients
- OCR/Vision-based ingredient extraction from images
- Recipe generation based on available ingredients
- Ingredient inventory management
- Dietary restriction and allergy management
- AI-powered ingredient substitution suggestions
- Context-aware substitutions (cooking vs baking)
- Calorie and macro tracking for recipes

**Fitness Features:**
- Workout plan saving and management
- Daily calorie intake tracking
- Meal logging with calorie/macro calculation
- Workout routine library
- Exercise logging and tracking
- AI-powered workout recommendations
- Fitness goal setting (weight loss, muscle gain, maintenance)
- Progress tracking (weight, measurements, body fat %)
- Calorie expenditure calculation
- Macro tracking (protein, carbs, fats)
- Integration of nutrition and fitness data
- Workout history and analytics

### Out of Scope (Future Phases)
- Social features (sharing recipes with friends)
- Real-time collaboration
- Meal planning calendar
- Shopping list generation
- OAuth providers (Google, Facebook login)
- Offline mode
- Barcode scanning for packaged ingredients
- Nutrition tracking and analysis

## 4. User Stories

### Authentication
- As a new user, I want to create an account with my email so I can save my data
- As a returning user, I want to log in to access my saved conversations and recipes
- As a logged-in user, I want to see my profile and logout option
- As an anonymous user, I want to try the app before signing up (guest mode)

### Chat History
- As a user, I want my conversations automatically saved so I never lose them
- As a user, I want to see a list of my past conversations with timestamps
- As a user, I want to search through my conversation history
- As a user, I want to continue a previous conversation where I left off
- As a user, I want to delete conversations I no longer need
- As a user, I want to see which agent type was used (Simple, RAG, MCP)

### Recipe Management
- As a user, I want to save recipes from AI responses with one click
- As a user, I want to view all my saved recipes in one place
- As a user, I want to organize recipes into collections (breakfast, dinner, quick meals, etc.)
- As a user, I want to search my saved recipes by title, ingredients, or tags
- As a user, I want to add personal notes to saved recipes
- As a user, I want to edit recipe details after saving
- As a user, I want to see which conversation a recipe came from

### Ingredient-Based Recipe Generation
- As a user, I want to type in ingredients I have and get recipe suggestions
- As a user, I want to upload a photo of my grocery receipt to extract ingredients
- As a user, I want to upload a photo of ingredients in my fridge/pantry for automatic detection
- As a user, I want to manage my ingredient inventory (add, remove, update quantities)
- As a user, I want the AI to suggest recipes based on what I already have
- As a user, I want to see which ingredients I'm missing for a suggested recipe
- As a user, I want my ingredient list to persist across sessions
- As a user, I want to mark ingredients as "used" when I cook a recipe

### Dietary Restrictions & Substitutions
- As a user, I want to set my dietary restrictions and allergies in my profile
- As a user, I want the AI to automatically suggest ingredient substitutions for allergies
- As a user, I want to see substitution suggestions when I'm missing an ingredient
- As a user, I want substitutions to be contextually appropriate (e.g., "butter â†’ olive oil for cooking, not baking")
- As a user, I want to save my preferred substitutions for future recipes
- As a user, I want recipes to automatically exclude ingredients I'm allergic to

### Fitness & Calorie Tracking
- As a user, I want to log meals and automatically calculate calories and macros
- As a user, I want to see daily/weekly/monthly calorie intake summaries
- As a user, I want to track calories burned from workouts
- As a user, I want to set daily calorie and macro goals
- As a user, I want to see my net calories (intake - expenditure)
- As a user, I want recipes to show nutritional information automatically

### Workout Management
- As a user, I want to save workout plans from AI responses
- As a user, I want to organize workouts by type (strength, cardio, flexibility, etc.)
- As a user, I want to log completed workouts with duration and intensity
- As a user, I want the AI to suggest workouts based on my fitness goals
- As a user, I want to track workout history and see progress over time
- As a user, I want to save custom workout routines

### Health & Progress Tracking
- As a user, I want to set fitness goals (weight loss/gain, muscle building, endurance)
- As a user, I want to log my weight and body measurements regularly
- As a user, I want to see progress charts for weight, calories, and workouts
- As a user, I want the AI to provide insights based on my progress
- As a user, I want to track body fat percentage and other health metrics
- As a user, I want reminders for meal logging and workout tracking

### User Experience
- As a user, I want the chat to feel the same speed as before (no performance loss)
- As a user, I want my data to be private and secure
- As a user, I want to access my data from any device after logging in
- As a user, I want to switch between cooking and fitness modes easily

## 5. Functional Requirements

### FR1: Authentication System
- Email/password registration with email validation
- Secure login with session management
- Password reset functionality
- User profile page showing account details
- Logout functionality that clears session

### FR2: Chat Persistence
- Every message (user and assistant) automatically saved to database
- Messages include full content, role, timestamp
- Tool calls and results stored as structured data
- RAG sources stored with messages for later reference
- Conversation metadata (title, agent type, created date)

### FR3: Conversation Management
- List view of all user conversations (newest first)
- Auto-generate conversation title from first user message
- Click to load and view full conversation
- "New Chat" button to start fresh conversation
- Delete conversation with confirmation
- Search conversations by content or title

### FR4: Recipe Saving
- "Save Recipe" button on assistant messages containing recipes
- Extract recipe data: title, ingredients, instructions
- Auto-tag recipes based on content
- Link saved recipe to source conversation/message

### FR5: Recipe Collection
- View all saved recipes in grid/list layout
- Filter recipes by tags, date saved
- Search recipes by title or ingredients
- Edit recipe details (title, ingredients, notes)
- Delete recipes
- Add personal notes to any recipe

### FR6: Ingredient Management & Recipe Generation
- Text input field for manual ingredient entry (comma or newline separated)
- Image upload component supporting JPEG, PNG, HEIC formats
- OCR/Vision API integration for receipt text extraction
- AI vision model for ingredient detection from photos
- Ingredient inventory database table with user_id, name, quantity, unit, expiry_date
- CRUD operations for ingredient management (add, edit, delete, mark as used)
- AI agent tool for recipe generation based on available ingredients
- Display "missing ingredients" for suggested recipes
- Ingredient auto-complete based on common ingredients database
- Support for ingredient quantities and units (cups, tbsp, grams, etc.)

### FR7: Dietary Restrictions & Substitutions
- User profile fields for dietary restrictions (vegetarian, vegan, gluten-free, etc.)
- User profile fields for allergies (nuts, dairy, shellfish, etc.)
- Database table for user dietary preferences and allergies
- AI tool for ingredient substitution suggestions
- Substitution database/knowledge base with common replacements
- Context-aware substitution logic (consider recipe type: baking, cooking, raw)
- Display substitution suggestions inline with recipes
- "Why this substitution?" explanations from AI
- User ability to save preferred substitutions
- Auto-filter recipes that contain allergens
- Substitution history tracking for learning user preferences

### FR8: Calorie & Nutrition Tracking
- Meal logging system with food search/autocomplete
- Automatic calorie calculation using nutrition database API
- Macro tracking (protein, carbs, fats) for logged meals
- Daily/weekly/monthly calorie intake summaries
- Recipe nutrition information extraction and display
- Daily calorie goal setting with customizable targets
- Net calorie calculation (intake - expenditure)
- Nutrition dashboard with charts and progress visualization

### FR9: Workout & Exercise Tracking
- Workout plan saving from AI responses
- Exercise database with common exercises and calorie burn rates
- Workout logging with duration, intensity, sets, reps
- Custom workout routine builder
- Workout history tracking and analytics
- AI-powered workout recommendation engine
- Workout categorization (strength, cardio, flexibility, HIIT, etc.)
- Calorie expenditure calculation based on exercise type and duration

### FR10: Health & Progress Monitoring
- User profile fields for fitness goals (weight loss/gain, muscle building, maintenance)
- Weight logging with date tracking
- Body measurement tracking (waist, chest, arms, legs, etc.)
- Body fat percentage tracking
- Progress charts and visualization (weight, calories, workouts over time)
- Goal progress indicators and milestones
- AI-generated insights based on user data
- Health metrics dashboard

### FR11: Data Security
- Row-Level Security (RLS) policies ensuring users only see their own data
- Encrypted passwords using Supabase Auth
- Secure API routes that validate user sessions
- No exposure of service keys to client
- Secure image upload via Supabase Storage with user-specific buckets

## 6. Non-Functional Requirements

### NFR1: Performance
- Chat streaming maintains current performance (< 100ms first token)
- Message save operation happens asynchronously (doesn't block UI)
- Conversation list loads in < 500ms
- Recipe search returns results in < 300ms
- Database queries optimized with proper indexes
- Image upload and processing completes in < 3 seconds
- OCR/Vision processing for ingredient extraction < 5 seconds
- Recipe generation from ingredients < 2 seconds

### NFR2: Reliability
- 99.9% uptime for authentication and data access
- Automatic retry for failed database writes
- Graceful degradation if Supabase is unavailable
- No data loss even if save fails (queue and retry)

### NFR3: Scalability
- Support for 1000+ conversations per user
- Support for 500+ saved recipes per user
- Support for 200+ ingredients per user
- Efficient pagination for large datasets
- Database designed to handle 10,000+ users
- Image storage optimized with compression and CDN delivery

### NFR4: Security
- HTTPS only
- Secure session tokens with expiration
- SQL injection protection via parameterized queries
- XSS protection in recipe content rendering
- CSRF protection on all mutations

### NFR5: Usability
- Zero configuration for users (automatic setup)
- Intuitive navigation between conversations and recipes
- Clear visual indicators for saved vs unsaved state
- Mobile-responsive design
- Accessible (WCAG 2.1 Level AA)

## 7. Technical Constraints

### Existing Architecture
- Must work with Next.js 15 App Router
- Must maintain AI SDK 5 streaming patterns
- Must preserve Vectorize RAG functionality
- Must use pnpm package manager
- Must pass TypeScript compilation (no errors)

### Integration Requirements
- Use Supabase JS client v2+
- Use Supabase SSR helpers for Next.js
- Use Supabase Storage for image uploads
- Follow Supabase Auth best practices
- Use Supabase Realtime only if needed (Phase 2)
- Integrate AI vision model (GPT-4 Vision or similar) for ingredient extraction
- Use Next.js Image component for optimized image delivery

### Code Quality
- Follow existing code style and patterns
- Maintain shadcn/ui component usage
- Keep performance optimizations (debouncing, memoization)
- Add proper TypeScript types for all Supabase tables

## 8. Data Model

### Tables Required

**Cooking & Recipe Tables:**
1. **conversations** - Stores chat sessions (cooking + fitness)
2. **messages** - Stores individual messages within conversations
3. **saved_recipes** - Stores user's recipe collection
4. **recipe_collections** - Stores recipe organization (future)
5. **ingredients** - Stores user's ingredient inventory
6. **ingredient_images** - Stores uploaded receipt/ingredient photos
7. **user_dietary_preferences** - Stores dietary restrictions and allergies
8. **ingredient_substitutions** - Stores common substitution knowledge base
9. **user_substitution_preferences** - Stores user's preferred substitutions

**Fitness & Health Tables:**
10. **workout_plans** - Stores saved workout routines
11. **workout_logs** - Stores completed workout sessions
12. **exercises** - Reference table of exercises with calorie burn rates
13. **meal_logs** - Stores logged meals with nutrition data
14. **calorie_tracking** - Daily calorie intake/expenditure summary
15. **health_metrics** - Stores weight, body measurements, body fat %
16. **fitness_goals** - Stores user fitness goals and targets
17. **progress_snapshots** - Periodic progress data for charts/analytics

### Relationships

**Cooking Relationships:**
- User (auth.users) â†’ conversations (one-to-many)
- Conversation â†’ messages (one-to-many)
- User â†’ saved_recipes (one-to-many)
- Message â†’ saved_recipe (one-to-one, optional link)
- User â†’ ingredients (one-to-many)
- User â†’ ingredient_images (one-to-many)
- ingredient_images â†’ ingredients (one-to-many, extracted ingredients from image)
- User â†’ user_dietary_preferences (one-to-one)
- User â†’ user_substitution_preferences (one-to-many)
- ingredient_substitutions (global reference table, no user_id)

**Fitness Relationships:**
- User â†’ workout_plans (one-to-many)
- User â†’ workout_logs (one-to-many)
- workout_plans â†’ workout_logs (one-to-many, instances of plan execution)
- User â†’ meal_logs (one-to-many)
- meal_logs â†’ saved_recipes (many-to-one, optional link if meal is from saved recipe)
- User â†’ calorie_tracking (one-to-many, one per day)
- User â†’ health_metrics (one-to-many, timestamped measurements)
- User â†’ fitness_goals (one-to-many)
- User â†’ progress_snapshots (one-to-many)
- exercises (global reference table, no user_id)

## 9. User Interface Requirements

### New Pages

**Cooking Pages:**
- `/login` - Login form
- `/signup` - Registration form
- `/recipes` - Recipe collection browser
- `/recipes/[id]` - Individual recipe view
- `/conversations` - Conversation history browser (optional - could be sidebar)
- `/ingredients` - Ingredient inventory management
- `/ingredients/add` - Add ingredients manually or via image upload

**Fitness Pages:**
- `/workouts` - Workout library and history browser
- `/workouts/[id]` - Individual workout details and exercise list
- `/fitness-dashboard` - Overview of fitness progress, calories, goals, and metrics
- `/meal-log` - Daily meal logging interface with calorie tracking
- `/progress` - Charts and analytics for weight, calories, workouts, and body measurements

### Modified Components
- Header/Navigation - Add user menu and auth buttons
- ChatAssistant - Add conversation selector, "Save Recipe" button, ingredient-based recipe prompt
- Home Page - Update to show login prompt for anonymous users

### New Components

**Cooking Components:**
- LoginForm - Email/password login
- SignupForm - User registration
- UserMenu - Profile dropdown
- ConversationList - Browse chat history
- RecipeCard - Display saved recipe with nutrition info and substitution suggestions
- RecipeList - Browse recipes
- SaveRecipeButton - Extract and save recipe from message
- IngredientInput - Manual ingredient entry form
- IngredientUpload - Image upload for receipts/ingredients
- IngredientList - Display user's ingredient inventory
- IngredientCard - Individual ingredient display with quantity/expiry
- RecipeFromIngredientsButton - Generate recipes based on available ingredients
- DietaryPreferencesForm - Manage dietary restrictions and allergies
- SubstitutionSuggestion - Display AI-generated substitution with explanation
- SubstitutionHistory - Show past substitutions user has made
- NutritionBreakdown - Show recipe macros (protein, carbs, fats) and calories

**Fitness Components:**
- WorkoutCard - Display saved workout with exercises, sets, reps
- WorkoutList - Browse workout library
- SaveWorkoutButton - Extract and save workout plan from AI message
- WorkoutLogForm - Log completed workout session with duration and intensity
- MealLogForm - Log meals with automatic calorie/macro calculation
- CalorieTracker - Daily calorie intake/expenditure widget with progress bar
- ProgressChart - Line/bar charts for weight, calories, workouts over time
- FitnessGoalSetter - Set and track fitness goals (weight target, calorie goals, etc.)
- HealthMetricsForm - Log weight, body measurements, body fat %
- WorkoutRecommendation - AI-suggested workouts based on goals
- ExerciseSearch - Search exercise database with autocomplete
- MacroRing - Circular progress indicator for daily macro targets
- WeeklyCalendarView - Weekly view of logged meals and workouts

## 10. Edge Cases & Error Handling

### Authentication Errors
- Invalid credentials â†’ Show clear error message
- Email already exists â†’ Prompt to login instead
- Network failure during signup â†’ Retry mechanism
- Expired session â†’ Auto-redirect to login with return URL

### Data Persistence Errors
- Message save fails â†’ Queue for retry, show warning indicator
- Conversation load fails â†’ Show error state with retry button
- Recipe save fails â†’ Show error, allow manual retry
- Database connection lost â†’ Graceful degradation, queue operations

### User Actions
- Delete conversation with unsaved recipe/workout â†’ Warn user
- Logout with unsaved changes â†’ No issue (auto-save)
- Multiple devices, same user â†’ Last write wins (eventual consistency)
- Delete workout with logged sessions â†’ Warn user about losing history

### Ingredient & Image Processing Errors
- Image upload fails â†’ Show error, allow retry
- OCR/Vision processing fails â†’ Fallback to manual entry, show partial results if any
- Unsupported image format â†’ Show clear error with supported formats
- Image too large â†’ Auto-compress or show size limit error
- No ingredients detected in image â†’ Prompt user to try different photo or manual entry
- Duplicate ingredients â†’ Merge and update quantity
- Invalid ingredient data â†’ Validate and show specific error (e.g., "quantity must be a number")

### Fitness & Calorie Tracking Errors
- Nutrition API unavailable â†’ Use cached data or show error with manual entry option
- Meal log save fails â†’ Queue for retry, show warning indicator
- Workout log save fails â†’ Queue for retry, show warning indicator
- Invalid calorie/macro values â†’ Validate and show clear error
- Missing exercise data â†’ Prompt user to complete required fields
- Weight log with invalid value â†’ Show validation error (must be positive number)
- Progress chart data missing â†’ Show empty state with helpful message
- Goal setting with invalid targets â†’ Validate and show constraints (e.g., "calorie goal must be between 1000-5000")

## 11. Open Questions

**Cooking & Ingredients:**
1. Should guest users be able to try the app before signup? (Ephemeral mode)
2. Should we auto-generate conversation titles or let users rename them?
3. How long should we keep conversation history (forever, 90 days, user choice)?
4. Should deleted conversations be soft-deleted or hard-deleted?
5. Should we support exporting recipes to PDF or other formats?
6. Which OCR/Vision API should we use? (OpenAI GPT-4 Vision, Google Cloud Vision, Tesseract)
7. Should ingredient expiry dates trigger notifications/warnings?
8. How should we handle ingredient quantity updates when cooking recipes?

**Fitness & Nutrition:**
9. Which nutrition API should we use? (USDA FoodData Central, Nutritionix, Edamam, MyFitnessPal)
10. Should we support barcode scanning for meal logging?
11. Should we integrate with fitness trackers (Apple Health, Google Fit, Fitbit)?
12. How should we handle custom exercises not in the database?
13. Should progress snapshots be automatic (weekly) or manual?
14. Should we support social features (sharing workouts/recipes with friends)?
15. How should we calculate calorie burn for exercises? (MET values, user-specific formulas)
16. Should we provide AI coaching/feedback on progress toward goals?

## 12. Success Criteria

### Launch Criteria (Must Have)

**Cooking Features:**
- User can sign up and log in successfully
- All chat messages automatically persist (cooking and fitness conversations)
- User can view conversation history
- User can save recipes from AI responses
- User can view and search saved recipes
- User can add ingredients manually
- User can upload images and extract ingredients
- User can generate recipes from available ingredients
- User can manage ingredient inventory (CRUD operations)
- User can set dietary restrictions and receive substitution suggestions

**Fitness Features:**
- User can log meals with automatic calorie/macro calculation
- User can save workout plans from AI responses
- User can log completed workouts with duration and intensity
- User can view daily calorie intake and expenditure
- User can set fitness goals (weight target, calorie goals, macro targets)
- User can log weight and basic body measurements
- User can view progress charts for weight and calories over time
- User can browse exercise database and search for exercises
- User can set dietary restrictions and allergies
- User can get AI-powered ingredient substitution suggestions
- Substitutions are context-aware (consider recipe type)
- Recipes automatically exclude allergens
- User can save preferred substitutions
- Data is secure (RLS policies working)
- No performance degradation in chat
- TypeScript compiles without errors

### Quality Criteria
- Zero data loss in normal operations
- < 1% error rate on database operations
- 100% of user data isolated and secure
- Mobile-responsive on all screen sizes
- Accessible to screen readers

## 13. Timeline Estimate

This is for planning purposes only - actual implementation may vary.

- **Phase 1: Foundation** (Est. 4-6 hours)
  - Install Supabase, create project, set up database schema (cooking + fitness tables)

- **Phase 2: Authentication** (Est. 3-4 hours)
  - Auth components, login/signup pages, middleware

- **Phase 3: Chat Persistence** (Est. 4-5 hours)
  - Message storage, conversation loading, API updates

- **Phase 4: Recipe Management** (Est. 5-6 hours)
  - Recipe CRUD, UI components, search/filter

- **Phase 5: Ingredient Tracking** (Est. 6-8 hours)
  - Ingredient inventory, image upload, OCR integration

- **Phase 6: Fitness & Workout Tracking** (Est. 6-8 hours)
  - Workout CRUD, exercise database, workout logging

- **Phase 7: Calorie & Nutrition Tracking** (Est. 6-8 hours)
  - Meal logging, calorie calculation, macro tracking, nutrition API integration

- **Phase 8: Health & Progress Monitoring** (Est. 4-6 hours)
  - Weight logging, progress charts, fitness goals, health metrics

- **Phase 9: Polish & Testing** (Est. 4-6 hours)
  - Error handling, edge cases, TypeScript fixes, performance optimization

**Total Estimate**: 42-57 hours of development time

---

END OF PRD
